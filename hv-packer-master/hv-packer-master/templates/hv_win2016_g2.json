{
  "builders": [
    {
      "type": "hyperv-iso",
      "vm_name": "{{ user `vm_name` }}",
      "iso_url": "{{ user `iso_url` }}",
      "iso_checksum": "{{user `iso_checksum_type`}}:{{user `iso_checksum`}}",
      "temp_path": ".",
      "disk_size": "{{ user `disk_size`}}",
      "communicator": "winrm",
      "winrm_username": "Administrator",
      "winrm_password": "password",
      "winrm_timeout": "8h",
      "shutdown_timeout": "30m",
      "memory": 4096,
      "enable_dynamic_memory": "true",
      "cpus": 4,
      "generation": 2,
      "switch_name": "{{user `switch_name`}}",
      "vlan_id": "{{user `vlan_id`}}",
      "boot_wait": "1s",
      "boot_command": [
        "a<enter><wait>a<enter><wait>a<enter><wait>a<enter>"
      ],
      "output_directory": "{{ user `output_directory`}}",
      "guest_additions_mode":"disable",
      "enable_secure_boot":false,
      "skip_export": true,
      "secondary_iso_images": [
        "{{ user `secondary_iso_image`}}"
      ]
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "script": "./extra/scripts/phase-1.ps1"
    },
    {
      "type": "windows-restart",
      "restart_timeout": "1h"
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "script": "./extra/scripts/phase-2.ps1"
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "script": "./extra/scripts/phase-3.ps1"
    },
    {
      "type": "windows-restart",
      "restart_timeout": "2h",
      "pause_before": "30s",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "script": "./extra/scripts/windows-updates.ps1"
    },
    {
      "type": "windows-restart",
      "restart_timeout": "2h",
      "pause_before": "30s",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "inline": ["Write-Host \"Pausing before next stage\";Start-Sleep -Seconds {{ user `upgrade_timeout` }}"]
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "script": "./extra/scripts/windows-updates.ps1",
      "pause_before": "30s"
    },
    {
      "type": "windows-restart",
      "restart_timeout": "2h",
      "pause_before": "30s",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "inline": ["Write-Host \"Pausing before next stage\";Start-Sleep -Seconds {{ user `upgrade_timeout` }}"]
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "script": "./extra/scripts/windows-updates.ps1",
      "pause_before": "30s"
    },
    {
      "type": "windows-restart",
      "restart_timeout": "2h",
      "pause_before": "30s",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "inline": ["Write-Host \"Pausing before next stage\";Start-Sleep -Seconds {{ user `upgrade_timeout` }}"]
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "script": "./extra/scripts/phase-5.ps1"
    },
    {
      "type": "powershell",
      "elevated_user": "Administrator",
      "elevated_password": "password",
      "script": "./extra/scripts/windows-compress.ps1"
    },
    {
      "type": "powershell",
      "inline": [
        "Write-Output Phase-5-Deprovisioning",
        "if( Test-Path $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml -Force}",
        "& $Env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /shutdown /quiet"
      ]
    }
  ],
  "variables": {
    "iso_url": "",
    "iso_checksum_type": "",
    "iso_checksum": "",
    "switch_name": "",
    "vlan_id": "",
    "vm_name": "",
    "disk_size": "",
    "output_directory": "",
    "secondary_iso_image": "",
    "sysprep_unattended": "",
    "vagrant_sysprep_unattended": "",
    "upgrade_timeout": ""
  }
}